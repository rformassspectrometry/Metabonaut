name: pkgdown


on:
  repository_dispatch:
    types: [trigger-workflow-2]

env:
  has_testthat: 'false'
  run_covr: 'false'
  run_pkgdown: 'true'
  has_RUnit: 'false'
  has_BiocCheck: 'false'
  cache-version: 'cache-v4'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    container: rformassspectrometry/metabonaut:latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      ## Set the R library to the directory matching the
      ## R packages cache step further below when running on Docker (Linux).
      - name: Set R Library home on Linux
        if: runner.os == 'Linux'
        run: |
          mkdir /__w/_temp/Library
          mkdir /__w/Rtmp
          echo ".libPaths('/__w/_temp/Library')" > ~/.Rprofile
          echo "options(quarto.quiet = FALSE)" >> ~/.Rprofile

      - name: Checkout package
        uses: actions/checkout@v4

      - name: Verify Quarto Installation
        run: quarto --version

      - name: Install deploy dependencies
        run: |
          apt-get update
          apt-get -y install rsync

      - name: Install pkgdown
        run: |
          remotes::install_github("r-lib/pkgdown")
          remotes::install_github("quarto-dev/quarto-r")
        shell: Rscript {0}

      - name: Load SpectriPy and setup env for GH user
        continue-on-error: true
        run: |
          library(SpectriPy)
        shell: Rscript {0}

      - name: Build site
        env:
          QUARTO_PRINT_STACK: true
          QUARTO_LOG_LEVEL: DEBUG
          SPECTRIPY_USE_CONDA: FALSE
          QUARTO_R_QUIET: FALSE
        run: |
          install.packages("unixtools", repos = "http://www.rforge.net/")
          unixtools::set.tempdir("/__w/Rtmp")
          pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)
        shell: Rscript {0}

      - name: Deploy to GitHub pages ðŸš€
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          clean: false
          branch: gh-pages
          folder: docs
        ## Note that you need to run pkgdown::deploy_to_branch(new_process = FALSE)
        ## at least one locally before this will work. This creates the gh-pages
        ## branch (erasing anything you haven't version controlled!) and
        ## makes the git history recognizable by pkgdown.
